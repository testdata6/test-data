global:
  # The smarthost and SMTP sender used for mail notifications.
  smtp_smarthost: SMTP_ADDRESS:25
  smtp_from: ALERT_FROM

  smtp_require_tls: false


  #smtp_auth_username: 'alertmanager'
  #smtp_auth_password: 'password'
  # The auth token for Hipchat.
  #hipchat_auth_token: '1234556789'
  # Alternative host for Hipchat.
  hipchat_api_url: https://example.hipchat.com


# The directory from which notification templates are read.
# The root route on which each incoming alert enters.
route:
  # The labels by which incoming alerts are grouped together. For example,
  # multiple alerts coming in for cluster=A and alertname=LatencyHigh would
  # be batched into a single group.
  group_by: ['alertname','kubernetes_namespace','app','kubernetes_pod_name','namespace']

  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  # This way ensures that you get multiple alerts for the same group that start
  # firing shortly after another are batched together on the first
  # notification.
  group_wait: 30s

  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 30s

  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 2h

  # A default receiver

  receiver: Devops-X-mails
  routes:
  - match_re:
      alertname: ^(DeploymentGenerationMismatch|PodCrashed|DaemonSetRolloutStuck|K8SDaemonSetsNotScheduled|DaemonSetsMissScheduled)$
      namespace: ^(namespace1|namespace2|namespace3)$
    receiver: monitoring-box-hipchat
#  routes:
#  - match_re:
#      alertname: ^(Couchbase_Cluster_Disk_space)$
#      kubernetes_namespace: ^(plp-qa|plp-uat|plp-stg|plp-perf)$
#    receiver: Devops-hipchat-group

#templates:
#- '/etc/alertmanager/hipchat.tmpl'
inhibit_rules:
- source_match:
    severity: 'critical'
  target_match:
    severity: 'warning'
  # Apply inhibition if the alertname is the same.
  equal: ['alertname', 'cluster', 'service']
receivers:
- name: 'monitoring-box-hipchat'
  hipchat_configs:
  - room_id: ${ROOM_ID}
    auth_token: ${hipchat_api_token}
    message: 'Alert: {{ .GroupLabels.alertname }} Description-{{ range .Alerts }}{{ .Annotations.description }}{{ end }}'
    notify: true
    message_format: html
    send_resolved: true
- name: 'monitoring-box-email'
  email_configs:
  - to: 'email1@example.com,email1@example.com'
    send_resolved: true
    require_tls: false
