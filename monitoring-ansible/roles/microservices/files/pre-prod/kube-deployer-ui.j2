---
apiVersion: v1
kind: Service
metadata:
  namespace: "{{ns_name}}"
  name: "{{item.service_name}}"
  labels:
    app: "{{item.service_name}}"
    tier: frontend
spec:
  ports:
  - port: {{item.port | int }}
  selector:
    app: "{{item.service_name}}"
    tier: frontend
---
apiVersion: extensions/v1beta1 # for versions before 1.8.0 use apps/v1beta1
kind: Deployment
metadata:
  name: "{{item.service_name}}"
  namespace: "{{ns_name}}"
spec:
  selector:
    matchLabels:
      app: "{{item.service_name}}"
      tier: frontend
  replicas: {{ms_replica | int }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: "{{item.service_name}}"
        tier: frontend
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role
                operator: In
                values:
                - "{{ns_name}}"
      containers:
      - name: "{{item.service_name}}-container"
        image: "939393939339.dkr.ecr.us-east-1.amazonaws.com/plp-{{item.service_name}}:latest"
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
        env:
        - name: item.service_name
          value: "{{item.service_name}}"
        - name: container_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: environment
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: namespace
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: host
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: container_id
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: APP_ENV
          value: env_properties
        - name: CONF_HOME
          value: /opt/apps-java/config
        - name: CONSUL_TOKEN
          valueFrom:
            secretKeyRef:
              name: consul-token
              key: consul-token
        ## prep prod temp
        - name: CONSUL_URL
          value: "consul-nonprod.gl-poc.com:443"
        - name: PREFIX_MAIN
          value: "{{conf_start_path}}/prop-feature/{{ns_name}}/{{item.service_name}}-service/"
        - name: PREFIX_DB
          value: "{{conf_start_path}}/prop-feature/{{ns_name}}/global/aws/{{item.cluster}}-cluster/"
        ports:
        - name: svc-port
          containerPort: {{item.port | int }}
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: "/{{item.service_name}}/health"
            port: {{item.port | int }}
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 120
          successThreshold: 1
          timeoutSeconds: 60
